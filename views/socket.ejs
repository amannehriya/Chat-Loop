<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/output.css">
  <title>Chat App</title>
  <style>
    #message-container::-webkit-scrollbar{
   display:none;
    }
  </style>
</head>
<body class="h-lvh">
  
  <div class="w-lvw h-12 flex justify-between items-center px-3">
    <h2 class="absolute"><%=user.username%></h2>
    <a href="#" class="px-3 rounded bg-blue-600 text-white" id="video-call-btn">video call</a>
</div>
<div class="bg-zinc-200 pt-2 h-3/4 overflow-y-auto " id="message-container">
  <div id="chat"></div>
</div>

   <div class="bg-white h-12">
    <form id="chatform" class="bg-white p-2 " >
      <input id="recipient" placeholder="Recipient Username" />
        <input type="text" id="messagebox" class="flex-1 border border-gray-300 rounded-md px-3 py-2 focus:outline-none "
         placeholder="type a message....">
         <button type="submit" class=" ml-2 bg-indigo-600 text-white py-2 px-4 rounded-md" id="send">send</button>
    </form>
   </div> 
   <script src="https://cdn.socket.io/4.8.0/socket.io.min.js" integrity="sha384-OoIbkvzsFFQAG88r+IqMAjyOtYDPGO0cqK5HF5Uosdy/zUEGySeAzytENMDynREd" crossorigin="anonymous"></script>
<script>
      const chatform = document.querySelector("#chatform");
    const messagebox = document.querySelector("#messagebox");
    const recipient= document.querySelector("#recipient");
    const messagecontainer = document.querySelector("#message-container");
    var user = "<%=user.username%>"
    var socket = io();
    socket.emit("user-register",user);
    socket.emit("reciever",)
chatform.addEventListener("submit",function(event){
              event.preventDefault();     //iski mdd se form submit nhi ho paega 
              socket.emit("message",JSON.stringify({from:user,to:recipient.value, message:messagebox.value}));
              attachMessage(`${messagebox.value}`);
              document.getElementById('messagebox').value = ''; // Clear input
            })
   socket.on("alert",function(data){
    alert(data)
   })        
socket.on("oldmessage",function(data){
    if(data.from === "<%=user.username%>"){  
          attachMessage(data.message);
          }else{
            recieveMessage(data.message);
          }
})
function attachMessage(message){
            const userMessageContainer = document.createElement('div');
            userMessageContainer.classList.add('flex','mx-2', 'my-2', 'justify-end');

            const userMessageDiv = document.createElement("div");
            userMessageDiv.classList.add('bg-blue-500','text-white','p-3','rounded-lg','max-w-xs');
            
            const userMessageText = document.createElement('p');
            userMessageText.textContent = message;
            
            userMessageDiv.appendChild(userMessageText);
            userMessageContainer.appendChild(userMessageDiv);

            document.getElementById('message-container') .appendChild(userMessageContainer);
            document.querySelector("#message-container").scrollTop = document.querySelector("#message-container").scrollHeight
        }    
function recieveMessage(message){
            const userMessageContainer = document.createElement('div');
            userMessageContainer.classList.add('flex','mx-2','my-2','justify-start');

            const userMessageDiv = document.createElement("div");
            userMessageDiv.classList.add('bg-gray-300','text-gray-800','p-3','rounded-lg','max-w-xs');
            
            const userMessageText = document.createElement('p');
            userMessageText.textContent = message;
            
            userMessageDiv.appendChild(userMessageText);
            userMessageContainer.appendChild(userMessageDiv);

            document.getElementById('message-container') .appendChild(userMessageContainer);
            document.querySelector("#message-container").scrollTop = document.querySelector("#message-container").scrollHeight
        }    
  
</script>
</body>
</html>